version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    volumes:
      - ./images:/usr/share/nginx/html/images:ro # 이미지 파일을 읽기 전용으로 마운트
    depends_on:
      - backend # 프론트엔드가 백엔드에 의존
    networks:
      - vote-app-network
    deploy:
      resources:
        limits:
          memory: 256M # 메모리 제한
          cpus: '0.5'   # CPU 제한 (0.5 코어)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    build: ./backend
    ports:
      - "3000:3000" # 백엔드 서비스 포트
    environment:
      REDIS_HOST: redis # Redis 호스트 설정
      REDIS_PORT: 6379 # Redis 포트 설정
    depends_on: 
      - redis # redis가 먼저 시작되어야 함
    networks: 
      - vote-app-network
    deploy:
      resources:
        limits:
          memory: 512M # 메모리 제한
          cpus: '1.0'   # CPU 제한 (1 코어)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    image: "redis:latest"
    volumes:
      - redis_data:/data # Redis 데이터 저장을 위한 볼륨
    networks:
      - vote-app-network
    deploy:
      resources:
        limits:
          memory: 256M # 메모리 제한
          cpus: '0.25'  # CPU 제한 (0.25 코어)
          
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  redis_data: # Redis 데이터 저장을 위한 볼륨

networks: # auto create network and connect services vote-app-network
  vote-app-network: 
    driver: bridge 
